{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Documents/deploy/retire/freed/one/Class-Schedule-React/src/components/pages/List.js\";\nimport React, { useState } from 'react';\nimport { Container, Modal } from 'react-bootstrap';\nimport './Comments.css';\nimport { Row, Col } from 'react-grid';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from 'react-bootstrap/Card';\nimport moment from 'moment';\n\nconst List = props => {\n  const [comment, setComment] = useState(\"\");\n  const [date_posted, setDate] = useState(\"\");\n  const [announcement, setAnnouncement] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  async function signup() {\n    let item = {\n      comment,\n      date_posted,\n      announcement,\n      user\n    };\n    console.warn(item);\n    let result = await fetch(\"https://class-schedule-app00.herokuapp.com/comments/\", {\n      method: \"POST\",\n      body: JSON.stringify(item),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    let res = await result.json();\n\n    if (result.status === 200) {\n      setComment(\"\");\n      setDate(\"\");\n      setAnnouncement(\"\");\n      setUser(\"\");\n      setMessage(\"Your comment has been received!\");\n    } else {\n      setMessage(\"Your comment has been received!\");\n    }\n  }\n\n  ; // *\n\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const showModal = () => {\n    setIsOpen(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  const {\n    announcements\n  } = props;\n  if (!announcements || announcements.length === 0) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }\n  }, \"No Announcements, sorry\");\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"item-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, announcements.map((item, a, b, c, d, e) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: item.id,\n      style: {\n        width: '15rem',\n        borderRadius: '15px',\n        backgroundColor: \"#fff\",\n        border: \"none\",\n        outline: \"none\"\n      },\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"repo-text\",\n      key: a,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, item.title), /*#__PURE__*/React.createElement(Card.Text, {\n      className: \"repo-description\",\n      style: {\n        color: '#18183D'\n      },\n      key: b,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }, item.message), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      key: d,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }, \"Posted On: \", moment(item.date_created).utc().format('YYYY-MM-DD')), /*#__PURE__*/React.createElement(\"style\", {\n      type: \"text/css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 3\n      }\n    }, `\n    .btn-flat {\n      background-color: #18183D;\n      color: white;\n    }\n\n    .btn-sm {\n      padding: 0.1rem 0.5rem;\n      font-size: 0.9rem;\n    }\n    `), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      onClick: showModal,\n      variant: \"flat\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(Modal, {\n      show: isOpen,\n      onHide: hideModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: '#18183D'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 24\n      }\n    }, \"Leave your comment \"))), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: comment,\n      onChange: e => setComment(e.target.value),\n      type: \"text\",\n      className: \"formcontrol\",\n      placeholder: \"Comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 135\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: announcement,\n      onChange: e => setAnnouncement(e.target.value),\n      type: \"number\",\n      className: \"formcontrol\",\n      placeholder: \"Announcement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 152\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: user,\n      onChange: e => setUser(e.target.value),\n      type: \"number\",\n      className: \"formcontrol\",\n      placeholder: \"User\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 128\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: date_posted,\n      onChange: e => setDate(e.target.value),\n      type: \"date\",\n      className: \"formcontrol\",\n      placeholder: \"Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 133\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: signup,\n      variant: \"flat\",\n      size: \"sm\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"#18183D\"\n      },\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, message ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"#18183D\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 71\n      }\n    }, message) : null))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"flat\",\n      size: \"sm\",\n      onClick: hideModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, \"Close\"))))));\n  }))));\n};\n\nexport default List;","map":{"version":3,"sources":["/home/moringa/Documents/deploy/retire/freed/one/Class-Schedule-React/src/components/pages/List.js"],"names":["React","useState","Container","Modal","Row","Col","Button","Card","moment","List","props","comment","setComment","date_posted","setDate","announcement","setAnnouncement","user","setUser","message","setMessage","signup","item","console","warn","result","fetch","method","body","JSON","stringify","headers","res","json","status","isOpen","setIsOpen","showModal","hideModal","announcements","length","map","a","b","c","d","e","id","width","borderRadius","backgroundColor","border","outline","title","color","date_created","utc","format","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Modal } from 'react-bootstrap';\nimport './Comments.css';\nimport {  Row, Col } from 'react-grid';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from 'react-bootstrap/Card';\nimport moment from 'moment';\n\nconst List = (props) => {\n  const [comment, setComment]= useState(\"\");\n  const [date_posted, setDate]= useState(\"\");\n  const [announcement, setAnnouncement]= useState(\"\");\n  const [user, setUser]= useState(\"\");\n  const [message, setMessage]=useState(\"\");\n\nasync function signup() {\n  let item ={comment,date_posted,announcement,user}\n  console.warn(item)\n\n  let result = await  fetch(\"https://class-schedule-app00.herokuapp.com/comments/\", {\n      method: \"POST\",\n        body: JSON.stringify(item),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n    });\n    let res = await result.json();\n      if (result.status === 200) {\n        setComment(\"\");\n        setDate(\"\");\n        setAnnouncement(\"\");\n        setUser(\"\");\n        setMessage(\"Your comment has been received!\");\n      } else {\n        setMessage(\"Your comment has been received!\");\n      }\n   \n\n  };\n \n// *\n\nconst [isOpen, setIsOpen] = React.useState(false);\n  const showModal = () => {\n    setIsOpen(true);\n  };\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n \n  const { announcements } = props;\n  if (!announcements || announcements.length === 0)\n  return <p>No Announcements, sorry</p>;\n\n  return ( \n    <Container fluid >\n      <Row >\n      <Col className=\"item-container\">\n      {announcements.map((item,a,b,c,d,e) => {\n        return (\n          \n\n\n    <Card key={item.id}  style={{ width: '15rem',borderRadius: '15px', backgroundColor: \"#fff\", border:\"none\", outline:\"none\"}}   className='card'>\n    <Card.Body className=\"test\">\n    <Card.Title  className='repo-text'key={a}>{item.title}</Card.Title>\n    <Card.Text className='repo-description' style={{color:'#18183D'}} key={b}>{item.message}</Card.Text>        \n    {/* <Card.Subtitle className=\"mb-2 text-muted\"key={c}>Posted by: {item.user}</Card.Subtitle> */}\n    <Card.Subtitle className=\"mb-2 text-muted\"key={d}>Posted On: {moment(item.date_created).utc().format('YYYY-MM-DD')}</Card.Subtitle>\n\n  <style type=\"text/css\">\n\n    {`\n    .btn-flat {\n      background-color: #18183D;\n      color: white;\n    }\n\n    .btn-sm {\n      padding: 0.1rem 0.5rem;\n      font-size: 0.9rem;\n    }\n    `}\n  </style>\n  <>\n    <Button onClick={showModal} variant=\"flat\" size=\"sm\">Comment</Button>\n      <Modal show={isOpen} onHide={hideModal}>\n        <Modal.Header>\n          <Modal.Title><h1 style={{color:'#18183D'}}>Leave your comment </h1></Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <div>\n        <input value={comment} onChange={(e)=>setComment(e.target.value)} type=\"text\" className='formcontrol' placeholder='Comment' /><br />\n        <input value={announcement} onChange={(e)=>setAnnouncement(e.target.value)} type=\"number\" className='formcontrol' placeholder='Announcement' /><br />\n        <input value={user} onChange={(e)=>setUser(e.target.value)} type=\"number\" className='formcontrol' placeholder='User' /><br />\n        <input value={date_posted} onChange={(e)=>setDate(e.target.value)} type=\"date\" className='formcontrol' placeholder='Date' /><br />\n        <Button onClick={signup} variant=\"flat\" size=\"sm\" type=\"submit\">Submit</Button>\n        <div style={{color:\"#18183D\"}} className=\"message\">{message ? <p style={{color:\"#18183D\"}}>{message}</p> : null}</div>\n      </div>\n        </Modal.Body>\n        <Modal.Footer>\n        <Button variant=\"flat\" size=\"sm\" onClick={hideModal}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n</Card.Body>\n    </Card>\n        );\n      })}\n       </Col>\n      </Row>\n          </Container>\n  );\n};\nexport default List;"]},"metadata":{},"sourceType":"module"}