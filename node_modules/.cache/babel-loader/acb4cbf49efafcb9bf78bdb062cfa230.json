{"ast":null,"code":"import axios from\"axios\";import{LOGIN_SUCCESS,LOGIN_FAILED,REGISTER_CUSER_SUCCESS,REGISTER_CUSER_FAILED,LOGOUT_SUCCESS}from\"../actions/type\";export var create_studentuser=function create_studentuser(_ref){var username=_ref.username,email=_ref.email,password=_ref.password,password2=_ref.password2;return function(dispatch){var config={headers:{'Content-Type':'application/json'}};var body=JSON.stringify({username:username,email:email,password:password,password2:password2});axios.post('https://neapi.herokuapp.com/api/signup/student/',body,config).then(function(res){dispatch({type:REGISTER_CUSER_SUCCESS,payload:res.data});console.log(res.data);}).catch(function(err){dispatch({type:REGISTER_CUSER_FAILED});console.log(err.response.data);});};};export var login=function login(_ref2){var username=_ref2.username,password=_ref2.password;return function(dispatch){var config={headers:{'Content-Type':'application/json'}};var body=JSON.stringify({username:username,password:password});axios.post('https://neapi.herokuapp.com/api/login/',body,config).then(function(response){dispatch({type:LOGIN_SUCCESS,payload:response.data});}).catch(function(err){dispatch({type:LOGIN_FAILED});});};};export var logout=function logout(){return function(dispatch,getState){var token=getState().auth.token;var config={headers:{'Content-Type':'application/json'}};if(token){config.headers['Authorization']=\"Token \".concat(token);}axios.post('https://neapi.herokuapp.com/api/logout/',null,config).then(function(res){dispatch({type:LOGOUT_SUCCESS});}).catch(function(err){console.log(err.response.data);});};};","map":{"version":3,"sources":["/home/moringa/Documents/tif/vow/ui/Class-Schedule-React/src/actions/auth.js"],"names":["axios","LOGIN_SUCCESS","LOGIN_FAILED","REGISTER_CUSER_SUCCESS","REGISTER_CUSER_FAILED","LOGOUT_SUCCESS","create_studentuser","username","email","password","password2","dispatch","config","headers","body","JSON","stringify","post","then","res","type","payload","data","console","log","catch","err","response","login","logout","getState","token","auth"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { \n     LOGIN_SUCCESS, LOGIN_FAILED, REGISTER_CUSER_SUCCESS, REGISTER_CUSER_FAILED, LOGOUT_SUCCESS\n} from \"../actions/type\"\n\n\n    \n\nexport const create_studentuser=({username, email,password, password2})=>(dispatch)=>{\n    const config={\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n    const body=JSON.stringify({username, email, password, password2})\n\n    axios.post('https://neapi.herokuapp.com/api/signup/student/', body, config)\n    .then(res =>{\n        dispatch({\n            type:REGISTER_CUSER_SUCCESS,\n            payload:res.data\n        })\n        console.log(res.data)\n    }).catch(err =>{\n        dispatch({\n            type:REGISTER_CUSER_FAILED\n        })\n        console.log(err.response.data)\n    })\n}\n\n\n\nexport const login=({username, password})=>(dispatch)=>{\n    const config={\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n    const body=JSON.stringify({username, password})\n\n    axios.post('https://neapi.herokuapp.com/api/login/', body, config)\n    .then(response =>{\n        dispatch({\n            type:LOGIN_SUCCESS,\n            payload:response.data\n        })\n    }).catch(err =>{\n        dispatch({\n            type:LOGIN_FAILED\n        })\n    })\n\n}\nexport const logout=()=>(dispatch, getState)=>{\n    const token=getState().auth.token\n    const config={\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n\n    if(token){\n        config.headers['Authorization']= `Token ${token}`\n    }\n    axios.post('https://neapi.herokuapp.com/api/logout/', null, config)\n    .then(res =>{\n        dispatch({\n            type:LOGOUT_SUCCESS\n        })\n    }).catch(err =>{\n        console.log(err.response.data)\n    })\n}\n"]},"metadata":{},"sourceType":"module"}